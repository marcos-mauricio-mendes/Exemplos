@charset "utf-8";
body {
	font: 100%/1.4 Verdana, Arial, Helvetica, sans-serif;
	background: #42413C;
	margin: 0;
	padding: 0;
	color: #000;
}
/* ~~ Seletores de elementos/tag ~~ */
ul, ol, dl { /* Devido a variações entre navegadores, é recomendado zerar o padding e as margem nas listas. É possível especificar as quantidades aqui ou nos itens da lista (LI, DT, DD) que eles contêm. Lembre-se: o que você fizer aqui ficará em cascata para a lista de navegação a não ser que você escreva outro seletor mais específico. */
	padding: 0;
	margin: 0;
}
h1, h2, h3, h4, h5, h6, p {
	margin-top: 0;	 /* ao remover a margem superior, as margens podem escapar das suas containing block. A margem inferior restante vai mantê-la afastada de qualquer elemento que se segue. */
	padding-right: 15px;
	padding-left: 15px; /* ao adicionar o padding aos lados dos elementos dentro dos blocos, ao invés dos próprios elementos dos blocos, qualquer combinação de modelo de caixa será removida. Um bloco aninhado com padding lateral também pode ser usado como método alternativo. */
}
a img { /* esse seletor remove a borda azul padrão exibida em alguns navegadores ao redor de uma imagem circundada por um link. */
	border: none;
}
/* ~~ A estilização dos links do seu site deve permanecer nesta ordem – incluindo o grupo de seletores que criam o efeito hover. ~~ */
a:link {
	color: #42413C;
	text-decoration: underline; /* a não ser que você crie o estilo de seus links para que pareçam totalmente exclusivos, é melhor utilizar links sublinhados para uma identificação visual mais rápida. */
}
a:visited {
	color: #6E6C64;
	text-decoration: underline;
}
a:hover, a:active, a:focus { /* esse grupo de seletores dará ao navegador que estiver usando um teclado, a mesma sensação de focalizar como se estivesse usando um mouse. */
	text-decoration: none;
}
/* ~~ Esse contêiner de largura fixa envolve todos os outros blocos~~ */
.container {
	width: 960px;
	background: #FFFFFF;
	margin: 0 auto; /* o valor automático nos lados, combinado com a largura, centraliza o layout */
}
/* ~~ O cabeçalho não tem uma largura predeterminda. Ele se estenderá por toda a largura do seu layout. ~~ */
header {
	background: #ADB96E;
}
/* ~~ Essas são as colunas do layout. ~~ 

1) O padding é colocado somente na parte superior e/ou inferior dos elementos de blocos. Os elementos nesses blocos têm padding em seus lados impedindo o surgimento do “modelo tipo caixa”. Lembre-se: ao adicionar qualquer padding lateral ou borda ao próprio blco, ele será adicionado à largura que você define para criar a largura *total*. Também é possível remover o padding no elemento dentro do bloco e estabelecer um segundo elemento de bloco dentro do primeiro, sem largura, e com o padding necessário para o seu design.

2) Como as colunas são todas flutuantes, não foi atribuída nenhuma margem a elas. Se for necessário adicionar margem, evite colocá-la no lado flutuante (por exemplo, uma margem direita em um blco definido para flutuar à direita). Em vez disso, muitas vezes é utilizado o padding . Para os blocos em que essa regra tem que ser quebrada, é necessário adicionar a declaração "exibição: inline" à regra do elemento de bloco para solucionar um erro recorrente em algumas versões do Internet Explorer em que a imagem é duplicada.

3) Como as classes podem ser usadas diversas vezes em um documento (e um elemento também pode ter várias classes aplicadas), foram atribuídas às colunas nomes de classe ao invés de IDs. Por exemplo, se for necessário, os blocos com duas barras laterais podem ser empilhados. Se preferir, é possível alterar facilmente para os IDs desde que esteja usando-os somente uma vez em cada documento.

4) Caso prefira seu navegador à esquerda ao invés de à direita, simplesmente flutue essas colunas para a direção oposta, todas à esquerda ao invés de à direita, e elas serão apresentadas na ordem inversa. Não há necessidade de mover os blocos em torno da fonte HTML.

*/
.sidebar1 {
	float: right;
	width: 180px;
	background: #EADCAE;
	padding-bottom: 10px;
}
.content {
	padding: 10px 0;
	width: 780px;
	float: right;
}

/* ~~ Esse seletor agrupado fornece as listas dentro do espaço da área de conteúdo ~~ */
.content ul, .content ol {
	padding: 0 15px 15px 40px; /* esse padding espelha o padding direito nos cabeçalhos e na regra de parágrafo acima. O padding foi colocado na parte inferior para obter espaço entre outros elementos das listas e à esquerda para criar o recuo. Estes podem ser ajustados como desejar. */
}

/* ~~ Os estilos de lista de navegação (podem ser removidos se for escolhido o uso de um submenu criado anteriormente, como o Spry) ~~ */
nav ul {
	list-style: none; /* isso remove o marcador de lista */
	border-top: 1px solid #666; /* isso cria a borda da parte superior para os links – todos os outros são colocados usando uma borda na parte inferior no LI */
	margin-bottom: 15px; /* isso cria o espaço entre a navegação no conteúdo abaixo */
}
nav ul li {
	border-bottom: 1px solid #666; /* isso cria a separação do botão */
}
nav ul a, nav ul a:visited { /* ao agrupar esses seletores, seus links mantêm a aparência de botão mesmo após terem sido visitados. */
	padding: 5px 5px 5px 15px;
	display: block; /* isso fornece as propriedades de bloqueio de links, preenchendo todo o LI. Assim, toda a área responderá ao clique do mouse. */
	width: 160px;  /*essa largura faz com que o botão inteiro possa ser clicado no IE6. Se não for necessário estar compatível com o IE6, ele pode ser removido. Calcule a largura apropriada subtraindo o padding neste link da largura do contêiner da barra lateral. */
	text-decoration: none;
	background: #C6D580;
}
nav ul a:hover, nav ul a:active, nav ul a:focus { /* isso altera o fundo e a cor do texto para navegação com o mouse ou teclado. */
	background: #ADB96E;
	color: #FFF;
}

/* ~~ O rodapé ~~ */
footer {
	padding: 10px 0;
	background: #CCC49F;
	position: relative;/* isso possibilita que o hasLayout do IE6 faça a limpeza corretamente. */
	clear: both; /* essa propriedade de limpeza força o contêiner a reconhecer o conteúdo das colunas e onde elas terminam. */
}

/*Suporte HTML 5 – Define novas tags do HTML 5 para exibir blocos. Assim os navegadores saberão como processar as tags de forma apropriada. */
header, section, footer, aside, nav, article, figure {
	display: block;
}